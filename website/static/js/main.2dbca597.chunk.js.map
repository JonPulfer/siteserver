{"version":3,"sources":["Navigation.js","App.js","serviceWorker.js","index.js"],"names":["SocialNav","react_default","a","createElement","Nav_default","Link","href","NavItem","props","title","pageName","path","active","NavItems","pageItems","pages","map","page","key","className","SiteNav","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Navbar_default","bg","expand","Brand","Toggle","aria-controls","Collapse","id","React","Component","Index","Navigation","Jumbotron_default","fluid","AppRouter","BrowserRouter","Route","exact","component","TravelInfo","About","Afrita","ReactDOM","render","document","getElementById","Container_default","Row_default","Col_default","App_LoadTfLTubeLineStatus","Card_default","Header","Body","data-width","data-height","async","src","charSet","App_LoadTfLLivStrStationStatus","LoadTfLTubeLineStatus","state","lineStatus","_this2","axios","get","params","app_id","app_key","detail","then","json","setState","data","catch","error","alert","ListGroup_default","TfLLineList","lines","lineItems","line","name","TfLLineStatusList","lineStatuses","lineStatusItems","status","index","statusSeverityDescription","reason","LoadTfLLivStrStationStatus","_this3","livStreetStatus","_this4","getFamily","includeRouteBlockedStops","fromDate","toDate","description","CardColumns_default","Img","variant","style","width","xs","lg","Boolean","window","location","hostname","match","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dbca597.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction SocialNav() {\n  return (\n    <Nav>\n      <Nav.Link href=\"https://keybase.io/jonp\">Keybase</Nav.Link>\n      <Nav.Link href=\"https://github.com/jonpulfer\">Github</Nav.Link>\n      <Nav.Link href=\"https://www.linkedin.com/in/jon-pulfer-3b407b2/\">LinkedIn</Nav.Link>\n      <Nav.Link href=\"https://twitter.com/jonathanpulfer\">@jonathanpulfer</Nav.Link>\n    </Nav>\n  );\n}\n\nfunction NavItem(props) {\n\n  if (props.title === props.pageName) {\n    return <Nav.Link href={props.path} active>{props.title}</Nav.Link>\n  } else {\n    return <Nav.Link href={props.path}>{props.title}</Nav.Link>\n  }\n\n}\n\nfunction NavItems(props) {\n  const pageItems = props.pageItems;\n  const pageName = props.pageName;\n  const pages = pageItems.map((page) =>\n    <NavItem key={page.title} path={page.path} title={page.title} pageName={pageName}/>\n  );\n\n  return (\n    <Nav className=\"mr-auto\">\n      {pages}\n    </Nav>\n  )\n}\n\nclass SiteNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pageName = props.pageName;\n    this.pages = [\n      {\n        path: \"/about\",\n        title: \"About\",\n      },\n      {\n        path: \"/afrita\",\n        title: \"Afrita\",\n      },\n      {\n        path: \"/travel\",\n        title: \"Travel\",\n      }\n    ];\n  }\n\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Jonathan Pulfer</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <NavItems pageItems={this.pages} pageName={this.pageName}/>\n          <SocialNav/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default SiteNav;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport SiteNav from './Navigation';\nimport './App.css';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\n// Apex landing page. This currently has nothing particularly interesting on it but will include other components as I\n// experiment more with React.\nclass Index extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SiteNav pageName=\"Index\"/>\n        <Jumbotron fluid>\n          <h1>Hello, world!</h1>\n          <p>\n            Here be dragons...\n          </p>\n        </Jumbotron>\n        <p>\n          Home to things I'm currently messing around with.\n        </p>\n      </div>\n    );\n  }\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Index}/>\n        <Route path=\"/travel/\" component={TravelInfo}/>\n        <Route path=\"/about/\" component={About}/>\n        <Route path=\"/afrita/\" component={Afrita}/>\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n\nfunction TwitterScript() {\n  const scriptDetails = \"window.twttr = function (d, s, id) {\\n\" +\n    \"      var js, fjs = d.getElementsByTagName(s)[0],\\n\" +\n    \"      t = window.twttr || {};\\n\" +\n    \"      if (d.getElementById(id)) return t;\\n\" +\n    \"      js = d.createElement(s);\\n\" +\n    \"      js.id = id;\\n\" +\n    \"      js.src = \\\"https://platform.twitter.com/widgets.js\\\";\\n\" +\n    \"      fjs.parentNode.insertBefore(js, fjs);\\n\" +\n    \"\\n\" +\n    \"      t._e = [];\\n\" +\n    \"      t.ready = function (f) {\\n\" +\n    \"      t._e.push(f);\\n\" +\n    \"    };\\n\" +\n    \"      return t;\\n\" +\n    \"    }(document, \\\"script\\\", \\\"twitter-wjs\\\")\";\n\n  ReactDOM.render(scriptDetails, document.getElementById('twitterScript'))\n}\n\n// /travel page that loads content from APIs and aggregates the information that is relevant for my common journeys\n// like my commute.\nclass TravelInfo extends Component {\n\n  componentDidMount() {\n    TwitterScript();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SiteNav pageName=\"Travel\"/>\n        <Jumbotron fluid>\n          <h1>Hello, world!</h1>\n          <p>\n            Here be dragons...\n          </p>\n        </Jumbotron>\n        <Container>\n          <Row>\n            <Col>\n              <LoadTfLTubeLineStatus/>\n            </Col>\n            <Col>\n              <Card>\n                <Card.Header>Anglia Overground Rail</Card.Header>\n                <Card.Body>\n                  <a className=\"twitter-timeline\" data-width=\"220\" data-height=\"400\"\n                     href=\"https://twitter.com/greateranglia?ref_src=twsrc%5Etfw\">Tweets by greateranglia</a>\n                  <script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script>\n                </Card.Body>\n              </Card>\n              <LoadTfLLivStrStationStatus/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n// Load the line status information for the selected lines from the TfL API.\nclass LoadTfLTubeLineStatus extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineStatus: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://api.tfl.gov.uk/Line/circle%2Chammersmith-city%2Cmetropolitan%2Cvictoria/Status', {\n      params: {\n        app_id: '40643cfa',\n        app_key: '5fe0a9809625e701fdc1e05bad9aaaac',\n        detail: true\n      }\n    })\n      .then(json => this.setState({\n        lineStatus: json.data\n      }))\n      .catch(error => alert(error))\n  }\n\n  render() {\n    return (\n      <ListGroup>\n        <Card>\n          <Card.Header>Tube line Status</Card.Header>\n          <Card.Body>\n            <ListGroup><TfLLineList lines={this.state.lineStatus}/></ListGroup>\n          </Card.Body>\n\n        </Card>\n      </ListGroup>\n    )\n  }\n}\n\n// For the provided list of TfL lines, render as a list the cards containing the details.\nfunction TfLLineList(props) {\n  const lines = props.lines;\n  const lineItems = lines.map((line) =>\n    <Card key={line.id}>\n      <Card.Header>{line.name}</Card.Header>\n      <Card.Body>\n        <TfLLineStatusList lineStatuses={line.lineStatuses}/>\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <ListGroup>{lineItems}</ListGroup>\n  );\n}\n\n// Render the details of a line status as a card to be placed in a list.\nfunction TfLLineStatusList(props) {\n  const lines = props.lineStatuses;\n  const lineStatusItems = lines.map((status, index) =>\n    <div key={index}>\n      <h4>{status.statusSeverityDescription}</h4>\n      <p>{status.reason}</p>\n      <hr/>\n    </div>\n  );\n\n  return (\n    <ListGroup>{lineStatusItems}</ListGroup>\n  );\n}\n\n// Load the Liverpool street station disruption information from the TfL API.\nclass LoadTfLLivStrStationStatus extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      livStreetStatus: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://api.tfl.gov.uk/StopPoint/HUBLST/Disruption', {\n      params: {\n        app_id: '40643cfa',\n        app_key: '5fe0a9809625e701fdc1e05bad9aaaac',\n        getFamily: false,\n        includeRouteBlockedStops: false,\n      }\n    })\n      .then(json => this.setState({\n        livStreetStatus: json.data\n      }))\n      .catch(error => alert(error))\n  }\n\n  render() {\n    return (\n      <Card>\n        <Card.Header>Liverpool Street disruptions</Card.Header>\n        <Card.Body>\n          <ListGroup>\n            {this.state.livStreetStatus.fromDate}<br/>\n            {this.state.livStreetStatus.toDate}<br/>\n            <p>{this.state.livStreetStatus.description}</p>\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SiteNav pageName=\"About\"/>\n        <Jumbotron fluid>\n          <h1>Hello, world!</h1>\n          <p>\n            Here be dragons...\n          </p>\n        </Jumbotron>\n        <Container>\n          <Row>\n            <Col>\n              <div className=\"narrow\">\n                <p>\n                  I'm a programmer (predominantly Go and Rust) living in Ipswich and currently commuting into London.\n                  Although this does mean I travel more than some, it enables me to work with some really interesting\n                  people using technology that challenges me. I enjoy helping people and fixing things, which provides\n                  me with plenty to learn and helps keep me energised.\n                </p>\n                <p>\n                  I'm always happy to hear about new opportunities and welcome connections via one of the social\n                  accounts in the links at the top.\n                </p>\n                <p>\n                  When I'm not working, the main draw on my time is <a href=\"/afrita\">Afrita</a>.\n                </p>\n                <p>Other sports/hobbies I enjoy are: -</p>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <CardColumns>\n              <Card>\n                <Card.Header>\n                  Painting\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    I've never formally studied any art disciplines but I really enjoy trying out different things,\n                    learning\n                    as I go. A friend of mine recently laughed when viewing my first self portrait saying that it\n                    reminded him of the faces on the Thomas the tank engine trains. Not quite what I was aiming for but\n                    at least it brought him some laughter for a while.\n                  </p>\n                  <p>\n                    I've settled on using acrylics as my medium as I really like the flexibility of being able to paint\n                    on\n                    any (primed) surface and work fast. As always, getting something on the surface to start a painting\n                    is\n                    pretty daunting but I counter that by blocking out with a ground wash before starting to put other\n                    marks\n                    down.\n                  </p>\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Img variant=\"top\" src=\"/remote_road.png\"/>\n                <Card.Header>\n                  Remote road\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    This was inspired by a number of remote roads I drove through on trips to Scotland.\n                  </p>\n                </Card.Body>\n              </Card>\n              <Card style={{width: '18rem'}}>\n                <Card.Img variant=\"top\" src=\"/self_portrait.png\"/>\n                <Card.Header>\n                  First self portrait\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    I wanted to try and see if I could capture a realistic expression and hopefully create something\n                    that\n                    was recognisable as me.\n                  </p>\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Img variant=\"top\" src=\"/guitar.png\"/>\n                <Card.Header>\n                  Guitar\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    From an early age I attempted to play guitars. Both my brother and myself eventually got to spend\n                    some\n                    time taking lessons from an excellent teacher/session musician. Competition between my brother and I\n                    always motivated us to learn more until inevitably his more creative nature elevated his abilities\n                    beyond\n                    my reach.\n                  </p>\n                  <p>\n                    I've owned a few guitars over the years. Like most hobbies, buying a new guitar is quite an\n                    addictive\n                    thing. I have worked very hard to resist that in recent years and this is currently the only guitar\n                    I\n                    have left.\n                  </p>\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Header>\n                  Music\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    Following my interest in playing guitar, I have always enjoyed listening to music. I was lucky that\n                    various people introduced me to different styles and my taste now is very varied. My grandfather\n                    particularly instilled an appreciation for classical piano by picking out particularly beautiful\n                    pieces to captivate me.\n                  </p>\n                  <p>\n                    I also enjoy experiencing live performances when I remember to organise the tickets!\n                  </p>\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Header>\n                  Running\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    I enjoy most sports and actively visit the gym for general fitness. More recently I have increased\n                    the amount of running I do with the aim of doing half marathons.\n                  </p>\n                </Card.Body>\n              </Card>\n              <Card style={{width: '18rem'}}>\n                <Card.Img variant=\"top\" src=\"/hat.png\"/>\n                <Card.Header>\n                  Knitting\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    I enjoy knitting as I find it relaxes me and allows my mind to be quiet for a time while I focus on\n                    the pattern and work with my hands. This hat was the first project that I actually managed to\n                    complete\n                    and as an extra bonus it mostly fits over my head!\n                  </p>\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Header>\n                  Sewing and making clothes\n                </Card.Header>\n                <Card.Body>\n                  <p>\n                    Among the many talents my grandmother has, dress design has been a passion and career for her. She\n                    took the time to nurture my interest and I have learned a great deal from her skill and experience.\n                  </p>\n                  <p>\n                    I enjoy working in traditional ways and own a Singer 201 treadle which I use as my main machine when\n                    making garments.\n                  </p>\n                </Card.Body>\n              </Card>\n            </CardColumns>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass Afrita extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SiteNav pageName=\"Afrita\"/>\n        <Jumbotron fluid>\n          <h1>Hello, world!</h1>\n          <p>\n            Here be dragons...\n          </p>\n        </Jumbotron>\n        <Container>\n          <Row>\n            <Col xs lg=\"4\">\n              <Card>\n                <Card.Img variant=\"top\" src=\"/Afrita.png\"/>\n                <Card.Header>\n                  Afrita\n                </Card.Header>\n                <Card.Body>\n                  <p><a href=\"https://www.c032.org/\">Contessa 32</a></p>\n                  <ListGroup>\n                    <li>Length (LOA): 32 ft / 9.75m</li>\n                    <li>Width (Beam): 10ft / 3m</li>\n                    <li>Keel (Draft): 5ft 6in / 1.75m</li>\n                    <li>Year (Launched): 1978</li>\n                    <li><a href=\"https://www.vesselfinder.com/?mmsi=235118438\">Current Position</a></li>\n                  </ListGroup>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col>\n              <Card>\n                <Card.Body>\n                  <p>\n                    Afrita was completed in 1978 by the Jeremy Rogers boat yard in Lymington.\n                    Originally she was called Sunrise and then, at some point before 1984, her name was changed. I\n                    purchased Afrita from a lovely family in Scotland in 2016 and have been enjoying sailing her ever\n                    since.\n                  </p>\n                  <p>\n                    Currently Afrita is berthed at Ipswich Haven marina in the historic dock in town. This is only a\n                    few minutes walk from home, or to one of the local cafes/restaurants or shops.\n                  </p>\n                  <p>\n                    I'm still building up my offshore experience with the goal to eventually cross oceans. My dream is\n                    to explore the pacific islands. Particularly Galapagos, Hawaii, French Polynesia and Fiji before\n                    arriving in Sydney. What I'll do if I make it that far is not in the dream at the moment so who\n                    knows!\n                  </p>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}